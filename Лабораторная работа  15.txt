# Отчет по лабораторной работе N 15 по курсу
# "Фундаментальная информатика"

Студент группы: M80-113Б, Агапов Владимир Сергеевич\
Контакты: agapow.volodya2018@gmail.com\
Работа выполнена: 11.03.2022\
Преподаватель: Довженко Анастасия Александровна

## 1. Тема
Обработка матриц

## 2. Цель работы

Составить программу на языке СИ, производящаяю обработку квадратной матрицы

## 3. Задание

Удаление столбцов, содержащих максимальный элемент матрицы. (Вариант № 26)

## 4. Оборудование

Процессор: Intel Core i5-10300H @ 4x 2.5GH\
ОП: 8000 Мб\
SSD: 256 Гб\
Монитор: 1920x1080\

## 5. Программное обеспечение

Операционная система семейства: **linux (ubuntu)**, версия **18.10 cosmic**\
Интерпретатор команд: **bash**, версия **4.4.19**.\
Система программирования: **--**, версия **--**\
Редактор текстов: **emacs**, версия **25.2.2**\
Утилиты операционной системы: **--**\
Прикладные системы и программы: **--**\
Местонахождение и имена файлов программ и данных на домашнем компьютере: **--**\

## 6. Идея, метод, алгоритм решения задачи

Создал 2 массива: саму матрицу и массив, в котором будут хранится номера столбцов,которые необходимо удалить. Далее задал границы согласно условию, после чего с помощью цикла for произвожу ввод матрице и тутже нахожу максимальный элемент в матрице, сохраняя номер столбца с этим элементом. Далее произвожу вывод пматрицы без столбцов с максимальным элементом.

## 7. Сценарий выполнения работы

| 1 | 2 | 3 | 
|---|---|---|
| 4 | 5 | 6 |
| 7 | 8 | 9 |

Вывод:

| 1 | 2 |  
|---|---|
| 4 | 5 |
| 7 | 8 |

## 8. Распечатка протокола
```
#include <stdio.h>
void set_empty(int *high, int razm)
{
    for (int i = 0; i < razm*razm; ++i) {
        high[i] = -1;
    }
}

int search(int element, int *high, int razm)
{
    int res = 0;
    for (int i = 0; i < razm*razm; i++) {
        if (element == high[i]) {
            res = 1;
        }
    }
    return res;
}

int main(void)
{
    int tests, razm, tekRazm, higher = -450000, schet = 0;
    scanf("%d %d", &tests, &razm);
    int mas[razm][razm], high[razm*razm];
    for (int test = 0; test < tests; ++test) {
        set_empty(high, razm);
        schet = 0;
        higher = -450000;
        scanf("%d", &tekRazm);
        for (int i = 0; i < tekRazm; i++) {
            for (int j = 0; j < tekRazm; j++) {
                scanf("%d", &mas[i][j]);
                if (mas[i][j] > higher) {
                    higher = mas[i][j];
                    set_empty(high, razm);
                    schet = 1;
                    high[0] = j;
                } else {
                    if (mas[i][j] == higher) {
                        high[schet] = j;
                        schet++;
                    }
                }
            }
        }
        for (int i = 0; i < tekRazm; ++i) {
            for (int j = 0; j < tekRazm; ++j) {
                if (search(j, high, razm) == 0) {
                    printf("%d ", mas[i][j]);
                }
            }
            printf("\n");
        }
    }
    return 0;
}

...
```

## 9. Дневник отладки

*Должен содержать дату и время сеансов отладки и основные события (ошибки в сценарии и программе, нестандартные ситуации) и краткие комментарии к ним. В дневнике отладки приводятся сведения об использовании других ЭВМ, существенном участии преподавателя и других лиц в написании и отладке программы.*

| №  | Лаб. или дом. | Дата       | Время | Событие                  | Действие по исправлению | Примечание  |
|----|---------------|------------|-------|--------------------------|-------------------------|-------------|
| 0  | 


## 10. Замечания автора по существу работы

Замечаний нет!

## 11. Выводы

Подведите итог:  Теперь лучше понимаю как работать с матрицами в СИ, научился удалять любую строку/столбец в матрице
